package com.vk2.touchsreentab.fragment;import android.app.Fragment;import android.app.FragmentTransaction;import android.content.Context;import android.os.Bundle;import android.support.annotation.NonNull;import android.support.annotation.Nullable;import android.view.Display;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import com.commonsware.cwac.preso.PresentationFragment;import com.vk2.touchsreentab.R;import com.vk2.touchsreentab.activity.DualMode;import com.vk2.touchsreentab.activity.MainActivity;import com.vk2.touchsreentab.fragment.fragmentcontroller.Fragmentez;import com.vk2.touchsreentab.listener.OnPlayerListener;import java.util.ArrayList;import java.util.List;public class FragmentDisplayPresentation extends PresentationFragment {    private AdsFragment adsFragment;    public static FragmentDisplayPresentation newInstance(Context ctxt, Display display) {        FragmentDisplayPresentation frag = new FragmentDisplayPresentation();        frag.setDisplay(ctxt, display);        return (frag);    }    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {        return inflater.inflate(R.layout.presentation_box, container, false);    }    @Override    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {        super.onViewCreated(view, savedInstanceState);        ((DualMode) getActivity()).onDefault();    }    public void showAdsFragment(boolean isShow) {        if (adsFragment == null) {            adsFragment = new AdsFragment();        }        if (isShow) {            getChildFragmentManager().beginTransaction()                    .add(R.id.framePlayer, adsFragment, AdsFragment.class.getName())                    .commit();        } else {            getChildFragmentManager().beginTransaction()                    .remove(adsFragment)                    .commit();        }    }    public void showNormalPlayer(@NonNull Bundle bundle) {        NormalPlayer normalPlayer = NormalPlayer.newInstance(bundle);        if (normalPlayer.isAdded()) {            getChildFragmentManager().beginTransaction()                    .detach(normalPlayer)                    .attach(normalPlayer)                    .commit();        } else {            getChildFragmentManager().beginTransaction()                    .replace(R.id.framePlayer, normalPlayer, NormalPlayer.class.getName())                    .commit();        }    }    public void showExoPlayer(@NonNull Bundle bundle) {        ExoPlayer exoPlayer = ExoPlayer.newInstance(bundle);        if (exoPlayer.isAdded()) {            getChildFragmentManager().beginTransaction()                    .detach(exoPlayer)                    .attach(exoPlayer)                    .commit();        } else {            getChildFragmentManager().beginTransaction()                    .replace(R.id.framePlayer, exoPlayer, NormalPlayer.class.getName())                    .commit();        }    }    public void showYoutubePlayer(@NonNull Bundle bundle) {        YoutubePlayer youtubePlayer = YoutubePlayer.newInstance(bundle);        if (youtubePlayer.isAdded()) {            getChildFragmentManager().beginTransaction()                    .detach(youtubePlayer)                    .attach(youtubePlayer)                    .commit();        } else {            getChildFragmentManager().beginTransaction()                    .replace(R.id.framePlayer, youtubePlayer, NormalPlayer.class.getName())                    .commit();        }    }}