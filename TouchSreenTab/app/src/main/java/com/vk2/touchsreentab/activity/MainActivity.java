package com.vk2.touchsreentab.activity;import android.content.Intent;import android.os.Bundle;import android.os.Environment;import android.util.DisplayMetrics;import android.util.Log;import android.view.View;import android.widget.ImageView;import android.widget.Toast;import androidx.databinding.DataBindingUtil;import com.bumptech.glide.Glide;import com.vk2.touchsreentab.R;import com.vk2.touchsreentab.api.ApiController;import com.vk2.touchsreentab.api.Callback;import com.vk2.touchsreentab.download.FileLoaderTask;import com.vk2.touchsreentab.download.FileTask;import com.vk2.touchsreentab.model.api.UrlForm;import com.vk2.touchsreentab.model.api.Ver;import com.vk2.touchsreentab.model.api.VerDetail;import com.vk2.touchsreentab.model.api.VerDetailForm;import com.vk2.touchsreentab.model.api.VerForm;import com.vk2.touchsreentab.utils.Constants;import com.vk2.touchsreentab.utils.FileUtils;import com.vk2.touchsreentab.utils.TimeUtils;import java.util.List;import okhttp3.ResponseBody;public class MainActivity extends BaseActivity {    private static final String UPDATE = "update";    private static final String DELETE = "delete";    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        DisplayMetrics displayMetrics = getResources().getDisplayMetrics();        int height = displayMetrics.heightPixels;        int width = displayMetrics.widthPixels;        float density = displayMetrics.density;        Log.d("TAG", "Density: " + density + " Height: " + height + " Width: " + width);        ImageView img = findViewById(R.id.boot);        Glide.with(this).asGif().load(R.raw.loading).into(img);        //new FileLoaderTask().execute("https://storage.fshare.vn/youtubeFile/j8U06veqxdU.mp4");        //Check File DB        if (FileUtils.checkExistFile(Constants.DB_NAME, Constants.DB_FOLDER)) {            String current = TimeUtils.getCurrentDate(TimeUtils.yyyyMMdd);            ApiController.getInstance().getListVer(this, current, new Callback() {                @Override                public void response(Object obj) {                    VerForm verForm = (VerForm) obj;                    if (verForm != null){                        List<Ver> vers = verForm.getData();                        for (Ver ver : vers){                            ApiController.getInstance().getByVer(MainActivity.this, ver.getVer(), new Callback() {                                @Override                                public void response(Object obj) {                                    VerDetailForm verDetailForm = (VerDetailForm) obj;                                    if (verDetailForm != null){                                        List<VerDetail> verDetails = verDetailForm.getData();                                        for (VerDetail verDetail : verDetails){                                            if (verDetail.getOperation().equals(DELETE)){                                            }else if (verDetail.getOperation().equals(UPDATE)){                                            }                                        }                                        gotoDual();                                    }else {                                        Toast.makeText(MainActivity.this, "Loi server", Toast.LENGTH_SHORT).show();                                    }                                }                            });                        }                    }else {                        Toast.makeText(MainActivity.this, "Loi server", Toast.LENGTH_SHORT).show();                    }                }            });            return;        }        ApiController.getInstance().getLatestTableSong(this, new Callback() {            @Override            public void response(Object obj) {                UrlForm urlForm = (UrlForm) obj;                if (urlForm != null) {                    String url = urlForm.getData().getUrl();                    ApiController.getInstance().downloadDB(url, new Callback() {                        @Override                        public void response(Object obj) {                            ResponseBody responseBody = (ResponseBody) obj;                            if (responseBody != null) {                                //Write File                                new FileTask().execute(responseBody);                            } else {                                Toast.makeText(MainActivity.this, "Khong the nap du lieu", Toast.LENGTH_SHORT).show();                            }                        }                    });                }else {                    Toast.makeText(MainActivity.this, "Loi server", Toast.LENGTH_SHORT).show();                }            }        });        //new ImageLoaderTask(this).execute("http://vksinger.oss-ap-southeast-1.aliyuncs.com//1823.png?Expires=1572921580&OSSAccessKeyId=LTAI4FehsPqAwTu18gBVbiMB&Signature=pAyTvoOK3WBKRzcXVxssrrrzA6k%3D");        //new FileLoaderTask().execute("https://firebasestorage.googleapis.com/v0/b/kingpes-download.appspot.com/o/intro%2Fintro_0024_Layer%201.jpg?alt=media&token=a3655aae-cdd5-4c70-a9d0-85e5e331e2b9");        //new FileLoaderTask().execute("http://storage.fshare.vn/ktvcloud/10/101037.ts");        //new DialogBanner.Builder(this).setUrl("https://firebasestorage.googleapis.com/v0/b/kingpes-download.appspot.com/o/intro%2Fintro_0024_Layer%201.jpg?alt=media&token=a3655aae-cdd5-4c70-a9d0-85e5e331e2b9").build();        //ApiController.getInstance().getLinkYoutube(this,"https://www.youtube.com/watch?v=t-wBwTEp9TY");//        ApiController.getInstance().getYoutubeKey(this, null);//        ApiController.getInstance().getSoundCloudKey(this, null);//////        File s = FileUtils.getPathFile("database.db", "KTV_DB_FOLDER");////        String d = Environment.getExternalStoragePublicDirectory("KTV_AB_FOLDER").toString();//        String d2 = Environment.getExternalStoragePublicDirectory("KTV_DB_FOLDER").toString();        //FileUtils.copyFile(d2, "database.db", d);        //FileUtils.deleteFile(d, "database.db");        //FileUtils.moveFile(d2, "database.db", d);        //ImageView img = findViewById(R.id.img);//        Uri u = ImageLoaderTask.getImageUri("182d3");//        String s = u.toString();//        Glide.with(this).load(ImageLoaderTask.getImageUri("182d3")).into(img);    }    private void gotoSingle() {        startActivity(new Intent(this, SingleMode.class));        finish();    }    private void gotoDual() {        startActivity(new Intent(this, DualMode.class));        finish();    }}