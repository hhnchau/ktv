package com.vk2.touchsreentab.fragment;import android.arch.lifecycle.Observer;import android.arch.lifecycle.ViewModelProviders;import android.arch.paging.PagedList;import android.os.Bundle;import android.support.annotation.NonNull;import android.support.annotation.Nullable;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.text.TextUtils;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.LinearLayout;import com.vk2.touchsreentab.R;import com.vk2.touchsreentab.adapter.MultiViewAdapter;import com.vk2.touchsreentab.aplication.MyApplication;import com.vk2.touchsreentab.database.entity.Song;import com.vk2.touchsreentab.model.viewmodel.SearchInputViewModel;import com.vk2.touchsreentab.model.viewmodel.SongViewModel;public class SearchComplexFragment extends BaseFragment {    private View view;    private String textSearch = "";    @Nullable    @Override    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {        view = inflater.inflate(R.layout.fragment_search_complex, container, false);        initRecyclerView();        return view;    }    private void initRecyclerView() {        if (getActivity() == null) return;        RecyclerView rcv = view.findViewById(R.id.rcv);        final MultiViewAdapter adapter = new MultiViewAdapter();        LinearLayoutManager layoutManager = new LinearLayoutManager(getActivity(), LinearLayout.VERTICAL, false);        rcv.setLayoutManager(layoutManager);        rcv.addItemDecoration(getDivider(layoutManager));        final SongViewModel songViewModel = ViewModelProviders.of(getActivity()).get(SongViewModel.class);        songViewModel.getSearchSong(MyApplication.appDatabase.songDao());        songViewModel.listSearchSong.observe(getActivity(), new Observer<PagedList<Song>>() {            @Override            public void onChanged(@Nullable PagedList<Song> songs) {                if (!TextUtils.isEmpty(textSearch))                    adapter.submitList(songs);            }        });        rcv.setAdapter(adapter);        SearchInputViewModel searchInputViewModel = ViewModelProviders.of(getActivity()).get(SearchInputViewModel.class);        searchInputViewModel.getSearchInput().observe(getActivity(), new Observer<String>() {            @Override            public void onChanged(@Nullable String s) {                textSearch = s;                songViewModel.search.setValue(s);            }        });    }}