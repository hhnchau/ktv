package com.vk2.touchsreentab.fragment;import android.arch.lifecycle.Observer;import android.arch.lifecycle.ViewModelProviders;import android.arch.paging.PagedList;import android.os.Bundle;import android.support.annotation.NonNull;import android.support.annotation.Nullable;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.LinearLayout;import com.vk2.touchsreentab.R;import com.vk2.touchsreentab.adapter.MultiViewRecommendAdapter;import com.vk2.touchsreentab.database.entity.Song;import com.vk2.touchsreentab.model.viewmodel.SongViewModel;public class RecommendFragment extends BaseFragment {    private View view;    private RecyclerView recyclerViewSongs;    @Nullable    @Override    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {        view = inflater.inflate(R.layout.fragment_recommend, container, false);        initView();        return view;    }    private void initView() {        recyclerViewSongs = view.findViewById(R.id.rcvSongs);        final MultiViewRecommendAdapter multiViewRecommendAdapter = new MultiViewRecommendAdapter();        LinearLayoutManager layoutManager = new LinearLayoutManager(getActivity(), LinearLayout.VERTICAL, false);        recyclerViewSongs.setLayoutManager(layoutManager);        recyclerViewSongs.addItemDecoration(getDivider(layoutManager));        recyclerViewSongs.setAdapter(multiViewRecommendAdapter);        SongViewModel songViewModel = ViewModelProviders.of(this).get(SongViewModel.class);        songViewModel.getAllListSong();        songViewModel.listSongOnline.observe(this, new Observer<PagedList<Song>>() {            @Override            public void onChanged(@Nullable PagedList<Song> songs) {                multiViewRecommendAdapter.submitList(songs);                Log.e("Tag","onChanged "+songs.size());            }        });    }}