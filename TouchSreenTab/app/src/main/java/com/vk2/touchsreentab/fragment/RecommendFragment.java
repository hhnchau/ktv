package com.vk2.touchsreentab.fragment;import android.arch.lifecycle.Observer;import android.arch.lifecycle.ViewModelProviders;import android.arch.paging.PagedList;import android.graphics.Rect;import android.os.Bundle;import android.support.annotation.NonNull;import android.support.annotation.Nullable;import android.support.v7.widget.DividerItemDecoration;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.LinearLayout;import android.widget.ScrollView;import com.vk2.touchsreentab.R;import com.vk2.touchsreentab.adapter.ArtistAdapter;import com.vk2.touchsreentab.adapter.CategoryAdapter;import com.vk2.touchsreentab.adapter.SongAdapter;import com.vk2.touchsreentab.aplication.MyApplication;import com.vk2.touchsreentab.database.entity.Singer;import com.vk2.touchsreentab.database.entity.Song;import com.vk2.touchsreentab.model.viewmodel.SingerVewModel;import com.vk2.touchsreentab.model.viewmodel.SongViewModel;import com.yarolegovich.discretescrollview.DiscreteScrollView;import com.yarolegovich.discretescrollview.transform.Pivot;import com.yarolegovich.discretescrollview.transform.ScaleTransformer;import java.util.ArrayList;import java.util.List;public class RecommendFragment extends BaseFragment {    private View view;    private RecyclerView recyclerViewSongs, recyclerViewSinger;    private SongAdapter songAdapter;    private DiscreteScrollView listCategoryView;    private List<String> listCategory;    private CategoryAdapter categoryAdapter;    @Nullable    @Override    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {        view = inflater.inflate(R.layout.fragment_recommend, container, false);        initView();        return view;    }    private void initView() {        recyclerViewSongs = view.findViewById(R.id.rcvSongs);        recyclerViewSinger = view.findViewById(R.id.rcvArtists);        listCategoryView = view.findViewById(R.id.rcvAlbums);        initListSong();        initListSinger();        initListCategory();    }    private void initListCategory() {        listCategoryView.setOverScrollEnabled(true);        listCategory = getListCategory();        categoryAdapter = new CategoryAdapter(getActivity(), listCategory);        listCategoryView.setAdapter(categoryAdapter);        listCategoryView.scrollToPosition(2);        listCategoryView.setItemTransformer(new ScaleTransformer.Builder()                .setMaxScale(1.2f)                .setPivotX(Pivot.X.CENTER)                .build());        listCategoryView.setSlideOnFlingThreshold(3000);    }//    private List<Singer> getListSinger() {//        String url = "https://api.androidhive.info/images/nature/";//        List<Singer> lst = new ArrayList<>();////        for (int i = 1; i < 100; i++) {//            Singer artist = new Singer(1, url + i + ".jpg", "Test" + i);//            lst.add(artist);//        }//        return lst;//    }    private List<String> getListCategory() {        List<String> list = new ArrayList<>();        for (int i = 0; i < 20; i++) {            String categoryObject = new String();            list.add(categoryObject);        }        return list;    }    private void initListSong() {        if (getActivity() == null) return;        songAdapter = new SongAdapter();        SongViewModel songViewModel = ViewModelProviders.of(getActivity()).get(SongViewModel.class);        songViewModel.search.setValue("");        songViewModel.getAllSong(MyApplication.appDatabase.songDao());        songViewModel.listSong.observe(getActivity(), new Observer<PagedList<Song>>() {            @Override            public void onChanged(@Nullable PagedList<Song> songs) {                songAdapter.submitList(songs);            }        });        recyclerViewSongs.setAdapter(songAdapter);        LinearLayoutManager layoutManager = new LinearLayoutManager(getActivity(), LinearLayoutManager.VERTICAL, false);        recyclerViewSongs.addItemDecoration(getDivider(layoutManager));        recyclerViewSongs.setLayoutManager(layoutManager);        recyclerViewSongs.setNestedScrollingEnabled(false);    }    private void initListSinger() {        if (getActivity() == null) return;        final ArtistAdapter artistAdapter = new ArtistAdapter();        recyclerViewSinger.setAdapter(artistAdapter);        recyclerViewSinger.setHasFixedSize(true);        recyclerViewSinger.setLayoutManager(new LinearLayoutManager(getActivity(), LinearLayout.HORIZONTAL, false));        int spacingInPixels = getResources().getDimensionPixelSize(R.dimen.dp_5);        recyclerViewSinger.addItemDecoration(new SpacesItemDecoration(spacingInPixels));        SingerVewModel singerVewModel = ViewModelProviders.of(getActivity()).get(SingerVewModel.class);        singerVewModel.getAllSinger(MyApplication.appDatabase.singerDao());        singerVewModel.listSinger.observe(getActivity(), new Observer<PagedList<Singer>>() {            @Override            public void onChanged(@Nullable PagedList<Singer> artists) {                artistAdapter.submitList(artists);            }        });    }    public class SpacesItemDecoration extends RecyclerView.ItemDecoration {        private int space;        SpacesItemDecoration(int space) {            this.space = space;        }        @Override        public void getItemOffsets(Rect outRect, @NonNull View view, @NonNull RecyclerView parent, @NonNull RecyclerView.State state) {            outRect.left = space;            outRect.right = space;            outRect.bottom = space;            outRect.top = 0;        }    }}